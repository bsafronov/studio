/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as SheetsIndexRouteImport } from './routes/sheets/index'
import { Route as SheetsNewRouteImport } from './routes/sheets/new'
import { Route as AuthAuthRouteImport } from './routes/auth/_auth'
import { Route as ApiSplatRouteImport } from './routes/api.$'
import { Route as SheetsSheetIdIndexRouteImport } from './routes/sheets/$sheetId/index'
import { Route as SheetsSheetIdSettingsRouteImport } from './routes/sheets/$sheetId/settings'
import { Route as SheetsSheetIdNewRouteImport } from './routes/sheets/$sheetId/new'
import { Route as SheetsSheetIdLogsRouteImport } from './routes/sheets/$sheetId/logs'
import { Route as SheetsSheetIdRowIdRouteImport } from './routes/sheets/$sheetId/$rowId'
import { Route as AuthAuthRegisterRouteImport } from './routes/auth/_auth.register'
import { Route as AuthAuthLoginRouteImport } from './routes/auth/_auth.login'
import { Route as ApiRpcSplatRouteImport } from './routes/api.rpc.$'
import { Route as SheetsSheetIdColumnsIndexRouteImport } from './routes/sheets/$sheetId/columns/index'
import { Route as SheetsSheetIdColumnsNewRouteImport } from './routes/sheets/$sheetId/columns/new'
import { Route as SheetsSheetIdColumnsColumnIdRouteImport } from './routes/sheets/$sheetId/columns/$columnId'

const AuthRouteImport = createFileRoute('/auth')()

const AuthRoute = AuthRouteImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const SheetsIndexRoute = SheetsIndexRouteImport.update({
  id: '/sheets/',
  path: '/sheets/',
  getParentRoute: () => rootRouteImport,
} as any)
const SheetsNewRoute = SheetsNewRouteImport.update({
  id: '/sheets/new',
  path: '/sheets/new',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthAuthRoute = AuthAuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => AuthRoute,
} as any)
const ApiSplatRoute = ApiSplatRouteImport.update({
  id: '/api/$',
  path: '/api/$',
  getParentRoute: () => rootRouteImport,
} as any)
const SheetsSheetIdIndexRoute = SheetsSheetIdIndexRouteImport.update({
  id: '/sheets/$sheetId/',
  path: '/sheets/$sheetId/',
  getParentRoute: () => rootRouteImport,
} as any)
const SheetsSheetIdSettingsRoute = SheetsSheetIdSettingsRouteImport.update({
  id: '/sheets/$sheetId/settings',
  path: '/sheets/$sheetId/settings',
  getParentRoute: () => rootRouteImport,
} as any)
const SheetsSheetIdNewRoute = SheetsSheetIdNewRouteImport.update({
  id: '/sheets/$sheetId/new',
  path: '/sheets/$sheetId/new',
  getParentRoute: () => rootRouteImport,
} as any)
const SheetsSheetIdLogsRoute = SheetsSheetIdLogsRouteImport.update({
  id: '/sheets/$sheetId/logs',
  path: '/sheets/$sheetId/logs',
  getParentRoute: () => rootRouteImport,
} as any)
const SheetsSheetIdRowIdRoute = SheetsSheetIdRowIdRouteImport.update({
  id: '/sheets/$sheetId/$rowId',
  path: '/sheets/$sheetId/$rowId',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthAuthRegisterRoute = AuthAuthRegisterRouteImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => AuthAuthRoute,
} as any)
const AuthAuthLoginRoute = AuthAuthLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthAuthRoute,
} as any)
const ApiRpcSplatRoute = ApiRpcSplatRouteImport.update({
  id: '/api/rpc/$',
  path: '/api/rpc/$',
  getParentRoute: () => rootRouteImport,
} as any)
const SheetsSheetIdColumnsIndexRoute =
  SheetsSheetIdColumnsIndexRouteImport.update({
    id: '/sheets/$sheetId/columns/',
    path: '/sheets/$sheetId/columns/',
    getParentRoute: () => rootRouteImport,
  } as any)
const SheetsSheetIdColumnsNewRoute = SheetsSheetIdColumnsNewRouteImport.update({
  id: '/sheets/$sheetId/columns/new',
  path: '/sheets/$sheetId/columns/new',
  getParentRoute: () => rootRouteImport,
} as any)
const SheetsSheetIdColumnsColumnIdRoute =
  SheetsSheetIdColumnsColumnIdRouteImport.update({
    id: '/sheets/$sheetId/columns/$columnId',
    path: '/sheets/$sheetId/columns/$columnId',
    getParentRoute: () => rootRouteImport,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/api/$': typeof ApiSplatRoute
  '/auth': typeof AuthAuthRouteWithChildren
  '/sheets/new': typeof SheetsNewRoute
  '/sheets': typeof SheetsIndexRoute
  '/api/rpc/$': typeof ApiRpcSplatRoute
  '/auth/login': typeof AuthAuthLoginRoute
  '/auth/register': typeof AuthAuthRegisterRoute
  '/sheets/$sheetId/$rowId': typeof SheetsSheetIdRowIdRoute
  '/sheets/$sheetId/logs': typeof SheetsSheetIdLogsRoute
  '/sheets/$sheetId/new': typeof SheetsSheetIdNewRoute
  '/sheets/$sheetId/settings': typeof SheetsSheetIdSettingsRoute
  '/sheets/$sheetId': typeof SheetsSheetIdIndexRoute
  '/sheets/$sheetId/columns/$columnId': typeof SheetsSheetIdColumnsColumnIdRoute
  '/sheets/$sheetId/columns/new': typeof SheetsSheetIdColumnsNewRoute
  '/sheets/$sheetId/columns': typeof SheetsSheetIdColumnsIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/api/$': typeof ApiSplatRoute
  '/auth': typeof AuthAuthRouteWithChildren
  '/sheets/new': typeof SheetsNewRoute
  '/sheets': typeof SheetsIndexRoute
  '/api/rpc/$': typeof ApiRpcSplatRoute
  '/auth/login': typeof AuthAuthLoginRoute
  '/auth/register': typeof AuthAuthRegisterRoute
  '/sheets/$sheetId/$rowId': typeof SheetsSheetIdRowIdRoute
  '/sheets/$sheetId/logs': typeof SheetsSheetIdLogsRoute
  '/sheets/$sheetId/new': typeof SheetsSheetIdNewRoute
  '/sheets/$sheetId/settings': typeof SheetsSheetIdSettingsRoute
  '/sheets/$sheetId': typeof SheetsSheetIdIndexRoute
  '/sheets/$sheetId/columns/$columnId': typeof SheetsSheetIdColumnsColumnIdRoute
  '/sheets/$sheetId/columns/new': typeof SheetsSheetIdColumnsNewRoute
  '/sheets/$sheetId/columns': typeof SheetsSheetIdColumnsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/api/$': typeof ApiSplatRoute
  '/auth': typeof AuthRouteWithChildren
  '/auth/_auth': typeof AuthAuthRouteWithChildren
  '/sheets/new': typeof SheetsNewRoute
  '/sheets/': typeof SheetsIndexRoute
  '/api/rpc/$': typeof ApiRpcSplatRoute
  '/auth/_auth/login': typeof AuthAuthLoginRoute
  '/auth/_auth/register': typeof AuthAuthRegisterRoute
  '/sheets/$sheetId/$rowId': typeof SheetsSheetIdRowIdRoute
  '/sheets/$sheetId/logs': typeof SheetsSheetIdLogsRoute
  '/sheets/$sheetId/new': typeof SheetsSheetIdNewRoute
  '/sheets/$sheetId/settings': typeof SheetsSheetIdSettingsRoute
  '/sheets/$sheetId/': typeof SheetsSheetIdIndexRoute
  '/sheets/$sheetId/columns/$columnId': typeof SheetsSheetIdColumnsColumnIdRoute
  '/sheets/$sheetId/columns/new': typeof SheetsSheetIdColumnsNewRoute
  '/sheets/$sheetId/columns/': typeof SheetsSheetIdColumnsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/api/$'
    | '/auth'
    | '/sheets/new'
    | '/sheets'
    | '/api/rpc/$'
    | '/auth/login'
    | '/auth/register'
    | '/sheets/$sheetId/$rowId'
    | '/sheets/$sheetId/logs'
    | '/sheets/$sheetId/new'
    | '/sheets/$sheetId/settings'
    | '/sheets/$sheetId'
    | '/sheets/$sheetId/columns/$columnId'
    | '/sheets/$sheetId/columns/new'
    | '/sheets/$sheetId/columns'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/api/$'
    | '/auth'
    | '/sheets/new'
    | '/sheets'
    | '/api/rpc/$'
    | '/auth/login'
    | '/auth/register'
    | '/sheets/$sheetId/$rowId'
    | '/sheets/$sheetId/logs'
    | '/sheets/$sheetId/new'
    | '/sheets/$sheetId/settings'
    | '/sheets/$sheetId'
    | '/sheets/$sheetId/columns/$columnId'
    | '/sheets/$sheetId/columns/new'
    | '/sheets/$sheetId/columns'
  id:
    | '__root__'
    | '/'
    | '/api/$'
    | '/auth'
    | '/auth/_auth'
    | '/sheets/new'
    | '/sheets/'
    | '/api/rpc/$'
    | '/auth/_auth/login'
    | '/auth/_auth/register'
    | '/sheets/$sheetId/$rowId'
    | '/sheets/$sheetId/logs'
    | '/sheets/$sheetId/new'
    | '/sheets/$sheetId/settings'
    | '/sheets/$sheetId/'
    | '/sheets/$sheetId/columns/$columnId'
    | '/sheets/$sheetId/columns/new'
    | '/sheets/$sheetId/columns/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ApiSplatRoute: typeof ApiSplatRoute
  AuthRoute: typeof AuthRouteWithChildren
  SheetsNewRoute: typeof SheetsNewRoute
  SheetsIndexRoute: typeof SheetsIndexRoute
  ApiRpcSplatRoute: typeof ApiRpcSplatRoute
  SheetsSheetIdRowIdRoute: typeof SheetsSheetIdRowIdRoute
  SheetsSheetIdLogsRoute: typeof SheetsSheetIdLogsRoute
  SheetsSheetIdNewRoute: typeof SheetsSheetIdNewRoute
  SheetsSheetIdSettingsRoute: typeof SheetsSheetIdSettingsRoute
  SheetsSheetIdIndexRoute: typeof SheetsSheetIdIndexRoute
  SheetsSheetIdColumnsColumnIdRoute: typeof SheetsSheetIdColumnsColumnIdRoute
  SheetsSheetIdColumnsNewRoute: typeof SheetsSheetIdColumnsNewRoute
  SheetsSheetIdColumnsIndexRoute: typeof SheetsSheetIdColumnsIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/sheets/': {
      id: '/sheets/'
      path: '/sheets'
      fullPath: '/sheets'
      preLoaderRoute: typeof SheetsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/sheets/new': {
      id: '/sheets/new'
      path: '/sheets/new'
      fullPath: '/sheets/new'
      preLoaderRoute: typeof SheetsNewRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/_auth': {
      id: '/auth/_auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthAuthRouteImport
      parentRoute: typeof AuthRoute
    }
    '/api/$': {
      id: '/api/$'
      path: '/api/$'
      fullPath: '/api/$'
      preLoaderRoute: typeof ApiSplatRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/sheets/$sheetId/': {
      id: '/sheets/$sheetId/'
      path: '/sheets/$sheetId'
      fullPath: '/sheets/$sheetId'
      preLoaderRoute: typeof SheetsSheetIdIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/sheets/$sheetId/settings': {
      id: '/sheets/$sheetId/settings'
      path: '/sheets/$sheetId/settings'
      fullPath: '/sheets/$sheetId/settings'
      preLoaderRoute: typeof SheetsSheetIdSettingsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/sheets/$sheetId/new': {
      id: '/sheets/$sheetId/new'
      path: '/sheets/$sheetId/new'
      fullPath: '/sheets/$sheetId/new'
      preLoaderRoute: typeof SheetsSheetIdNewRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/sheets/$sheetId/logs': {
      id: '/sheets/$sheetId/logs'
      path: '/sheets/$sheetId/logs'
      fullPath: '/sheets/$sheetId/logs'
      preLoaderRoute: typeof SheetsSheetIdLogsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/sheets/$sheetId/$rowId': {
      id: '/sheets/$sheetId/$rowId'
      path: '/sheets/$sheetId/$rowId'
      fullPath: '/sheets/$sheetId/$rowId'
      preLoaderRoute: typeof SheetsSheetIdRowIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/_auth/register': {
      id: '/auth/_auth/register'
      path: '/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthAuthRegisterRouteImport
      parentRoute: typeof AuthAuthRoute
    }
    '/auth/_auth/login': {
      id: '/auth/_auth/login'
      path: '/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthAuthLoginRouteImport
      parentRoute: typeof AuthAuthRoute
    }
    '/api/rpc/$': {
      id: '/api/rpc/$'
      path: '/api/rpc/$'
      fullPath: '/api/rpc/$'
      preLoaderRoute: typeof ApiRpcSplatRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/sheets/$sheetId/columns/': {
      id: '/sheets/$sheetId/columns/'
      path: '/sheets/$sheetId/columns'
      fullPath: '/sheets/$sheetId/columns'
      preLoaderRoute: typeof SheetsSheetIdColumnsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/sheets/$sheetId/columns/new': {
      id: '/sheets/$sheetId/columns/new'
      path: '/sheets/$sheetId/columns/new'
      fullPath: '/sheets/$sheetId/columns/new'
      preLoaderRoute: typeof SheetsSheetIdColumnsNewRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/sheets/$sheetId/columns/$columnId': {
      id: '/sheets/$sheetId/columns/$columnId'
      path: '/sheets/$sheetId/columns/$columnId'
      fullPath: '/sheets/$sheetId/columns/$columnId'
      preLoaderRoute: typeof SheetsSheetIdColumnsColumnIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

interface AuthAuthRouteChildren {
  AuthAuthLoginRoute: typeof AuthAuthLoginRoute
  AuthAuthRegisterRoute: typeof AuthAuthRegisterRoute
}

const AuthAuthRouteChildren: AuthAuthRouteChildren = {
  AuthAuthLoginRoute: AuthAuthLoginRoute,
  AuthAuthRegisterRoute: AuthAuthRegisterRoute,
}

const AuthAuthRouteWithChildren = AuthAuthRoute._addFileChildren(
  AuthAuthRouteChildren,
)

interface AuthRouteChildren {
  AuthAuthRoute: typeof AuthAuthRouteWithChildren
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthAuthRoute: AuthAuthRouteWithChildren,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ApiSplatRoute: ApiSplatRoute,
  AuthRoute: AuthRouteWithChildren,
  SheetsNewRoute: SheetsNewRoute,
  SheetsIndexRoute: SheetsIndexRoute,
  ApiRpcSplatRoute: ApiRpcSplatRoute,
  SheetsSheetIdRowIdRoute: SheetsSheetIdRowIdRoute,
  SheetsSheetIdLogsRoute: SheetsSheetIdLogsRoute,
  SheetsSheetIdNewRoute: SheetsSheetIdNewRoute,
  SheetsSheetIdSettingsRoute: SheetsSheetIdSettingsRoute,
  SheetsSheetIdIndexRoute: SheetsSheetIdIndexRoute,
  SheetsSheetIdColumnsColumnIdRoute: SheetsSheetIdColumnsColumnIdRoute,
  SheetsSheetIdColumnsNewRoute: SheetsSheetIdColumnsNewRoute,
  SheetsSheetIdColumnsIndexRoute: SheetsSheetIdColumnsIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

import type { getRouter } from './router.tsx'
import type { createStart } from '@tanstack/react-start'
declare module '@tanstack/react-start' {
  interface Register {
    ssr: true
    router: Awaited<ReturnType<typeof getRouter>>
  }
}
